;@ top
	mov r0, #5
	sub r5, r0, #1
	mov r1, #2
	mov r2, #2
	mov r3, r2
multi: @; repeated addition and compare
	add r4, r4, r1
	subs r2, #1
<<<<<<< HEAD
	beq compare
	b multi
compare:
	cmp r4, r2
	subs r6, r5, r3
	beq nextx
	b nexty
nexty:
	add r3, #1
	mov r2, r3
	mov r4, #0
	b multi

nextx:
	subs r7, r5, r1
	beq nextnumber
	add r1, r1, #1
	mov r3, r1
	mov r2, r1
	mov r4, #0
	b multi

nextnumber:
	add r0, r0, #1
	mov r1, #2
	mov r2, #2
	mov r3, r2 
	sub r5, r0, #1
	mov r4, #0
	b multi
	
isPrime:
 ;@ this guy is a prime
 
notPrime:
=======
	beq next
	b Loop
next:
	
>>>>>>> e33d912690d307c740f62b745c3f175b4566c008
